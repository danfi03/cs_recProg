import tkinter as tk
from tkinter import ttk
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import random
import threading
import time

# –£—Ä–æ–≤–µ–Ω—å —É–≥—Ä–æ–∑
risks = {"–ë–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π": 100, "Q$*@%^E": 0, "–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏": 0}
virus_labels = []

# –ù–æ–≤—ã–π –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤ –≤–∏—Ä—É—Å–æ–≤
virus_symbols = [
    "ü¶†", "üíÄ", "‚ö†Ô∏è", "üëæ", "ü§ñ", "üíª", "üßü", "‚ò†Ô∏è", "ü¶†", "üêç", "üëª", "üí£",
    "üß¨", "ü¶†", "üî•", "üß™", "üß©", "üí¢", "‚ö°", "‚öîÔ∏è", "üåê", "üîí", "üì°", "üõë",
    "üö®", "‚öîÔ∏è", "üî¥", "ü¶†", "üß†", "üö®", "üåç", "‚ö†Ô∏è", "üîë", "üí•", "üíª", "üñ•Ô∏è",
    "‚ö°", "üï∑Ô∏è", "üß´", "üß¨", "ü¶†", "üß™", "üö®", "üíª", "üåê", "üß†", "üí°", "üßä",
    "‚öôÔ∏è", "ü¶æ", "üíÄ", "‚ö°", "üì≤", "üîç", "üå™Ô∏è"
]


class UpdateTab:
    def __init__(self, parent, root_window):
        self.tab = ttk.Frame(parent)
        self.root = root_window  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ root

        self.label = tk.Label(self.tab, text="–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—Ä–∞–π–Ω–µ –≤–∞–∂–Ω—ã!", font=("Arial", 16))
        self.label.pack(pady=10)

        self.description_label = tk.Label(
            self.tab,
            text=(
                "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ 70-90% –∞—Ç–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∏–∑-–∑–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –±—ã—Ç—å —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã —Å –ø–æ–º–æ—â—å—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.\n\n"
                "–ò—Å—Ç–æ—á–Ω–∏–∫: Verizon Data Breach Investigations Report 2020,\nCVE (Common Vulnerabilities and Exposures) –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –æ—Ç Microsoft –∏ Google"
            ),
            font=("Arial", 14),
            wraplength=800,
            justify="center",
            bg='#f0f0f0',
            fg="blue"
        )
        self.description_label.pack(pady=20)

        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è Checkbutton
        self.style = ttk.Style()
        self.style.configure("TCheckbutton", font=("Arial", 12), background='#f0f0f0')

        # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        self.auto_update_var = tk.BooleanVar(value=False)
        self.auto_update_check = ttk.Checkbutton(
            self.tab, text="–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", variable=self.auto_update_var,
            style="TCheckbutton"
        )
        self.auto_update_check.pack(pady=10)

        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.update_button = ttk.Button(self.tab, text="–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–û", command=self.update_software,
                                        width=25, )
        self.update_button.pack(pady=20)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress = ttk.Progressbar(self.tab, orient="horizontal", length=400, mode="determinate")
        self.progress.pack(pady=10)

        self.info_label = tk.Label(self.tab, text="", font=("Arial", 12), bg='#f0f0f0')
        self.info_label.pack(pady=20)

        # –ì—Ä–∞—Ñ–∏–∫
        self.graph_frame = tk.Frame(self.tab, bg='#f0f0f0')
        self.graph_frame.pack(pady=10)

        # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –≤–∏—Ä—É—Å—ã –∏ –≥—Ä–∞—Ñ–∏–∫
        self.update_virus_labels()
        self.show_update_statistics()

    def update_software(self):
        """–°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ü–û."""
        if not self.auto_update_var.get():
            self.info_label.config(text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∫–ª—é—á–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!", fg="red")
            return

        self.progress['value'] = 0
        self.info_label.config(text="–ü—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω...", fg="black")

        def process():
            for i in range(101):
                time.sleep(0.03)
                self.progress['value'] = i
                self.root.update_idletasks()

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≥—Ä–∞—Ñ–∏–∫–∞
            risks["–ë–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"] = 100
            risks["–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏"] = 20
            self.update_virus_labels()
            self.show_update_statistics()
            self.info_label.config(text="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í—Å–µ —É–≥—Ä–æ–∑—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã.", fg="green")

        threading.Thread(target=process).start()

    def update_virus_labels(self):
        """–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∏—Ä—É—Å–æ–≤."""
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–∏—Ä—É—Å—ã
        for label in virus_labels:
            label.destroy()
        virus_labels.clear()

        if risks["–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏"] > 0:  # –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏—Ä—É—Å—ã –∏—Å—á–µ–∑–∞—é—Ç
            return

        # –ü–æ–∫–∞–∑–∞—Ç—å –≤–∏—Ä—É—Å—ã –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        virus_count = 50  # –£–≤–µ–ª–∏—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏—Ä—É—Å–æ–≤
        available_virus_symbols = virus_symbols.copy()

        for _ in range(virus_count):
            if available_virus_symbols:  # –ü–æ–∫–∞ –µ—Å—Ç—å –≤–∏—Ä—É—Å—ã –≤ —Å–ø–∏—Å–∫–µ, —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–∏—Ä–∞–µ–º
                virus_symbol = random.choice(available_virus_symbols)
                available_virus_symbols.remove(virus_symbol)  # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª—Å—è
            else:
                break  # –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—É—Å–æ–≤

            virus = tk.Label(self.tab, text=virus_symbol, font=("Arial", 18), fg="white", bg="black")

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
            self.root.update_idletasks()
            window_width = self.root.winfo_width()
            window_height = self.root.winfo_height()

            # –ü–æ–∑–∏—Ü–∏—è –ø–æ X –∏ Y, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Ä–∞–∑–º–µ—Ä–∞–º–∏ –æ–∫–Ω–∞
            x = random.randint(50, window_width - 50)
            y = random.randint(150, window_height - 150)
            virus.place(x=x, y=y)
            virus_labels.append(virus)

        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤–∏—Ä—É—Å–æ–≤
        self.move_viruses()

    def move_viruses(self):
        """–ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤–∏—Ä—É—Å–æ–≤."""
        for virus in virus_labels:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –Ω–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –≤—Å–µ–≥–æ –æ–∫–Ω–∞
            window_width = self.root.winfo_width()
            window_height = self.root.winfo_height()
            new_x = random.randint(50, window_width - 50)
            new_y = random.randint(150, window_height - 150)
            virus.place(x=new_x, y=new_y)

        if risks["–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏"] == 0:  # –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
            self.root.after(1000, self.move_viruses)  # –ß–µ—Ä–µ–∑ 1000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ (1 —Å–µ–∫—É–Ω–¥–∞) —Å–Ω–æ–≤–∞ –º–µ–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é

    def show_update_statistics(self):
        """–û–±–Ω–æ–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ —É–≥—Ä–æ–∑."""
        fig = Figure(figsize=(5, 4), dpi=100)
        ax = fig.add_subplot(111)

        # –ì—Ä–∞—Ñ–∏–∫ —Å –¥–≤—É–º—è —Å—Ç–æ–ª–±—Ü–∞–º–∏: "–ë–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π" –∏ "–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏"
        ax.bar(["–ë–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π", "–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏"], [risks["–ë–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"], risks["–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏"]],
               color=["red", "green"])

        ax.set_title("–£–≥—Ä–æ–∑—ã", fontsize=14)
        ax.set_ylabel("–†–∏—Å–∫ (%)", fontsize=12)

        # –û–±–Ω–æ–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        for widget in self.graph_frame.winfo_children():
            widget.destroy()

        canvas = FigureCanvasTkAgg(fig, master=self.graph_frame)
        canvas.draw()
        canvas.get_tk_widget().pack()
