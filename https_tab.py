import tkinter as tk
from tkinter import ttk
import random
import time


class HttpTab:
    def __init__(self, parent, root_window):
        self.tab = ttk.Frame(parent)
        self.root = root_window  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ root

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.header_label = tk.Label(
            self.tab,
            text="–ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTPS?",
            font=("Arial", 16, "bold"),
            bg='#f0f0f0'
        )
        self.header_label.pack(pady=10)

        # –û–ø–∏—Å–∞–Ω–∏–µ
        self.description_label = tk.Label(
            self.tab,
            text=(
                "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –º—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Å—Ç–∞—Ä—ã–µ –≤—Ä–µ–º–µ–Ω–∞. "
                "–ö—Ä—É–≥–æ–º —Ü–∞—Ä–∏—Ç HTTP –∏ –í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞—â–∏—Ç–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ."
            ),
            font=("Arial", 15),
            wraplength=800,
            justify="center",
            bg='#f0f0f0'
        )
        self.description_label.pack(pady=20)

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞
        self.start_button = ttk.Button(self.tab, text="–ü–æ–∏—Å–∫", command=self.start_quest)
        self.start_button.pack(pady=20)

        # –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–≤–µ—Å—Ç–∞
        self.result_label = tk.Label(
            self.tab,
            text="",
            font=("Arial", 12),
            fg="green",
            bg='#f0f0f0'
        )
        self.result_label.pack(pady=20)

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è HTTPS
        self.lock_button = None
        self.step = 0  # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞ –∫–≤–µ—Å—Ç–∞
        self.hacker_computer = None  # –•–∞–∫–µ—Ä—Å–∫–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä

    def start_quest(self):
        """–ó–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤."""
        # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        for widget in self.tab.winfo_children():
            widget.destroy()

        # –°–Ω–æ–≤–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
        self.header_label = tk.Label(
            self.tab,
            text="–ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTPS?",
            font=("Arial", 16, "bold"),
            bg='#f0f0f0'
        )
        self.header_label.pack(pady=10)

        self.description_label = tk.Label(
            self.tab,
            text=(
                "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –º—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Å—Ç–∞—Ä—ã–µ –≤—Ä–µ–º–µ–Ω–∞. "
                "–ö—Ä—É–≥–æ–º —Ü–∞—Ä–∏—Ç HTTP –∏ –í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞—â–∏—Ç–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ."
            ),
            font=("Arial", 15),
            wraplength=800,
            justify="center",
            bg='#f0f0f0'
        )
        self.description_label.pack(pady=20)

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞
        self.start_button = ttk.Button(self.tab, text="–ü–æ–∏—Å–∫", command=self.start_quest)
        self.start_button.pack(pady=20)

        # –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–≤–µ—Å—Ç–∞
        self.result_label = tk.Label(
            self.tab,
            text="",
            font=("Arial", 12),
            fg="green",
            bg='#f0f0f0'
        )
        self.result_label.pack(pady=20)

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–∞—á–∞–ª—É –∫–≤–µ—Å—Ç–∞
        self.result_label.config(text="–í–∞–º –ø–æ–ø–∞–ª—Å—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–æ—Ä—É–º, –≥–¥–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –¥–Ω–∏ –Ω–∞–ø—Ä–æ–ª—ë—Ç.", fg="blue", font=("Arial", 14))

        # –ü–æ—è–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
        self.create_lock_button("üîì http://4chan", self.show_http_simulation)

    def create_lock_button(self, text, action):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –∑–∞–º–∫–æ–º –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É."""
        if self.lock_button:
            self.lock_button.destroy()  # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        self.lock_button = tk.Button(self.tab, text=text, font=("Arial", 14), command=action, bg="green", fg="white")
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–∞
        x = (self.root.winfo_width() - self.lock_button.winfo_width()) // 2
        y = self.root.winfo_height() // 2
        self.lock_button.place(x=x, y=y)

    def type_writer_effect(self, text, label, delay=500, on_complete=None):
        """–ê–Ω–∏–º–∞—Ü–∏—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞, –∫–∞–∫ –±—É–¥—Ç–æ –∫—Ç–æ-—Ç–æ –ø–µ—á–∞—Ç–∞–µ—Ç."""
        def write_char(i):
            if i < len(text):
                label.config(text=text[:i+1])
                self.tab.after(delay, write_char, i+1)
            elif on_complete:
                on_complete()  # –ö–æ–≥–¥–∞ –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤—ã–∑—ã–≤–∞–µ–º callback

        write_char(0)

    def show_http_simulation(self):
        """–°–∏–º—É–ª—è—Ü–∏—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ HTTP."""
        # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–Ω–æ–ø–∫—É
        self.lock_button.destroy()

        # –®–∞–≥ 1: –ê–Ω–∏–º–∞—Ü–∏—è –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
        self.result_label.config(text="–í–≤–æ–¥–∏–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å...\n–≠—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ HTTP, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∑–∞—â–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ.", fg="blue")

        login_label = tk.Label(self.tab, text="–õ–æ–≥–∏–Ω:", font=("Arial", 16), bg="#f0f0f0")
        login_label.pack(pady=10)

        login_entry = tk.Label(self.tab, text="", font=("Arial", 14), fg="green", bg="#f0f0f0")
        login_entry.pack(pady=10)

        password_label = tk.Label(self.tab, text="–ü–∞—Ä–æ–ª—å:", font=("Arial", 16), bg="#f0f0f0")
        password_label.pack(pady=10)

        password_entry = tk.Label(self.tab, text="", font=("Arial", 14), fg="green", bg="#f0f0f0")
        password_entry.pack(pady=10)

        # –ê–Ω–∏–º–∞—Ü–∏—è –≤–≤–æ–¥–∞
        self.type_writer_effect("–ö—Ä—É—Ç–æ–π–¢–∏–ø527", login_entry, delay=350, on_complete=lambda: self.type_writer_effect("niktoNeUznaet", password_entry, delay=200, on_complete=self.remove_login_password_labels))

        # –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω—ã
        self.tab.after(7000, self.show_file_exchange)

    def remove_login_password_labels(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –ª–µ–π–±–ª–æ–≤ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞."""
        for widget in self.tab.winfo_children():
            if isinstance(widget, tk.Label) and widget.cget("text") in ["–õ–æ–≥–∏–Ω:", "–ü–∞—Ä–æ–ª—å:", "–ö—Ä—É—Ç–æ–π–¢–∏–ø527", "niktoNeUznaet"]:
                widget.destroy()

    def show_file_exchange(self):
        """–°–∏–º—É–ª—è—Ü–∏—è –æ–±–º–µ–Ω–∞ —Ñ–∞–π–ª–∞–º–∏ –º–µ–∂–¥—É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏."""
        self.result_label.config(text="–ù–∞ —Ñ–æ—Ä—É–º–µ –í—ã –Ω–∞—à–ª–∏ –¥—Ä—É–≥–∞ –∏ —Ä–µ—à–∏–ª–∏ –æ–±–º–µ–Ω—è—Ç—å—Å—è —Ñ–∞–π–ª–∞–º–∏.", fg="blue")

        # –î–≤–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ (—Ä–∞–∑–º–µ—â–∞–µ–º –∏—Ö –Ω–∏–∂–µ —Ç–µ–∫—Å—Ç–∞)
        x1 = (self.root.winfo_width() - 100) // 2 - 150  # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        y1 = self.root.winfo_height() // 2 + 100  # –†–∞–∑–º–µ—â–∞–µ–º –ø–æ–Ω–∏–∂–µ
        computer1 = tk.Label(self.tab, text="üíª", font=("Arial", 40), fg="purple", bg="#f0f0f0")
        computer1.place(x=x1, y=y1)

        x2 = (self.root.winfo_width() - 100) // 2 + 50  # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        y2 = self.root.winfo_height() // 2 + 100  # –†–∞–∑–º–µ—â–∞–µ–º –ø–æ–Ω–∏–∂–µ
        computer2 = tk.Label(self.tab, text="üíª", font=("Arial", 40), fg="green", bg="#f0f0f0")
        computer2.place(x=x2, y=y2)

        # –°–∏–º—É–ª—è—Ü–∏—è –æ–±–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
        file_transfer_label = tk.Label(self.tab, text="üìÇ‚ÜîüìÇ", font=("Arial", 50), fg="orange", bg="#f0f0f0")
        file_transfer_label.place(x=(self.root.winfo_width() - 350) // 2, y=y1 + 100)

        # –ü–æ—Å–ª–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏, –ø–æ—è–≤–∏—Ç—Å—è —Ç—Ä–µ—Ç–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
        self.tab.after(5000, self.show_attack)

    def show_attack(self):
        """–ê—Ç–∞–∫–∞ —Å —Ç—Ä–µ—Ç—å–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞."""
        self.result_label.config(text="‚ö†Ô∏è –û –Ω–µ—Ç! –ö—Ç–æ-—Ç–æ –ø–æ–¥–º–µ–Ω–∏–ª –º–∞—Ä—à—Ä—É—Ç—ã –ø–µ—Ä–µ–¥–∞—á–∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞—â–∏—â–µ–Ω–Ω—É—é —Å–µ—Ç—å! ‚ö†Ô∏è\n–¢–µ–ø–µ—Ä—å –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –Ω–∞—à –¥–∏–∞–ª–æ–≥!", fg="red")

        # –¢—Ä–µ—Ç–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä, –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –¥–∞–Ω–Ω—ã–µ
        self.hacker_computer = tk.Label(self.tab, text="üëæ", font=("Arial", 40), fg="red", bg="#f0f0f0")
        self.hacker_computer.place(x=(self.root.winfo_width() - 100) // 2 + 250, y=self.root.winfo_height() // 2 + 100)

        # –ü–æ—è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ HTTPS
        self.create_lock_button("üîí –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å HTTPS", self.activate_https)

    def activate_https(self):
        """–ê–∫—Ç–∏–≤–∞—Ü–∏—è HTTPS."""
        # –£–±–∏—Ä–∞–µ–º —Ö–∞–∫–µ—Ä–∞
        if self.hacker_computer:
            self.hacker_computer.destroy()

        self.result_label.config(
            text="HTTPS –∏—Å–ø–æ–ª—å–∑—É–µ—Ç SSL/TLS –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –∏—Ö –Ω–µ–ª—å–∑—è –±—ã–ª–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å.",
            fg="blue"
        )
        self.lock_button.destroy()

    def show_https_success(self):
        """–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ HTTPS –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–∞—è –∑–∞—â–∏—Ç–∞."""
        self.result_label.config(
            text="–¢–µ–ø–µ—Ä—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã —Å –ø–æ–º–æ—â—å—é HTTPS!",
            fg="green"
        )
        # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É
        self.lock_button.destroy()
